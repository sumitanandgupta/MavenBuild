# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master" ]
  #to add a manual trigger. This would provide a run workflow option 
  #for manually running the workflow.
  schedule:
  - cron: '*/6 * * * *'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: buildArtifact
      uses: actions/upload-artifact@v3
      with:
        name: buildArtifact
        path: target/*.war #Path from where the files will be picked from the build machine for upload.
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
          push: true
          context: .
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/planview:latest  
  deploy:
    if: github.ref_name == 'master'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: buildArtifact
    - name: Deployment
      run: 
        echo "Executing Deploymeent"
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/planview .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/planview:latest 

  
